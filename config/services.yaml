# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    session:
        class: Symfony\Component\HttpFoundation\Session\Session
    Symfony\Component\HttpFoundation\Session\SessionInterface: '@session'
    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            - '%env(DATABASE_URL)%'
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Doctrine/'

    App\Doctrine\:
        resource: '../src/Doctrine/'
        tags: ['doctrine.orm.entity_listener']
    
    App\Security\AdminSecurity:
        arguments:
            - '@security.authorization_checker'
        tags:
            - { name: sonata.admin.security.handler, admin: sonata.admin.user }
    app.security.admin_authentication_success_handler:
        class: App\Security\AdminAuthenticationSuccessHandler
        arguments: ['@router']
        
    app.admin.record:
        class: App\Admin\RecordAdmin
        arguments: [~, App\Entity\Record, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Content Management", label: "Records", context: "default" }

    app.admin.user:
        class: App\Admin\UserAdmin
        arguments:
            - ~
            - App\Entity\User
            - ~
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Users Management", label: "User" }


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
